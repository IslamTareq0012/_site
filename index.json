{
  "articles/Authentication/AuthenticationJWT.html": {
    "href": "articles/Authentication/AuthenticationJWT.html",
    "title": "Authenticate Your Client App to get a JWT | WaffarX Docs",
    "keywords": "Authenticate Your Client App to get a JWT Use this endpoint to get a JWT for your client app to access all \"WaffarX\" features (with predefined scopes) /api/Client/authenticate?api-version=1.0 , using App secret and app key combined in a [Basic Token] in the form of appkey:appsecret. curl --location --request GET 'https://api.waffarx.com/api/Client/authenticate?api-version=1.0' \\ --header 'Authorization: __Basic Token__' Parameters Details Headers Header Value Authentication Basic Token Response Note Your responses may differ from those listed below on a case-by-case basis. Parameter Type Description access_token String Generated JWT for client app to access allowed endpoints. refresh_token String Refresh token to regenerate a new JWT. client [Client Data Object] Client data object Client Data Object Parameter Type Description clientkey String Client key to be combined with client secret for [Basic Token] generation. id String Unique client id. clientName String Client admin user name. first_name String Client admin first name. last_name String Client admin second name. language String Client language. expires_in Int Token lifetime in minutes. token_type String Token type (in this care, bearer) scope [String] Scopes allowed for clinet. iPs [String] List of allowed IPs for client."
  },
  "articles/Callback/callback_webook.html": {
    "href": "articles/Callback/callback_webook.html",
    "title": "Cashback Tracking Via Webhook Flow | WaffarX Docs",
    "keywords": "Cashback Tracking Via Webhook Flow Important Cashback must be tracked on the client server to defferntiate between new and updated cashback, if a new one inserted, the end user must recieve a notification include this information. But if a cashback is already exists it must be updated only. Note What Is The Cashback Tracking Via Webhook Flow callback? When a new cashback report is issued, a webhook request is initiated from our end to defined endpoints in your web app to send you with this report. Transaction Processed Callback It's an URL for an endpoint in your web app, on which you'd receive cashback callbacks as a lists cotains user token and their cashback, you would receive a JSON object in POST request which contains a value by which you can know about users cashbacks such as the status of the cashback (Pending / Confirmed / Rejected / Closed), the exit click unique id for this shopping trip, cashback available for user to receive and other information related to user's transaction, here's a sample request similar to the one you should receive on your transaction processed callback endpoint. Example Note You will receive a list of this object. { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-12T17:42:05.924Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ] } ] } Cashback object Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received. userToken String User token of the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip currency String Cashback currency. userConvertedValue Decimal Cashback available for user to receive orderValue Decimal Purchase order value."
  },
  "articles/Cashbacks/GetUserCashBack.html": {
    "href": "articles/Cashbacks/GetUserCashBack.html",
    "title": "Get cashback EndPoint | WaffarX Docs",
    "keywords": "Get cashback EndPoint For cashback data retrieval, you can call api endpoint URL /api/v1/CashBack/GetUserCashBack , using api keys obtained from the auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/CashBack/GetUserCashBack' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Note For list endpoint use this curl. curl --location --request GET 'https://api.waffarx.com/api/v1/CashBack/GetCashBackList' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Parameters Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < Cashback object> Cashback details Cashback object Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received. userToken String User token of the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip currency String Cashback currency. userConvertedValue Decimal Cashback available for user to receive orderValue Decimal Purchase order value. Example Note For list endpoint you receive list of this object. { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-12T17:42:05.924Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ] } ] }"
  },
  "articles/Cashbacks/GetuserCashout.html": {
    "href": "articles/Cashbacks/GetuserCashout.html",
    "title": "Get cashout EndPoint | WaffarX Docs",
    "keywords": "Get cashout EndPoint For cashout data retrieval you can call api endpoint URL /api/v1/CashBack/GetUserCashOut , using api keys obtained from auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/CashBack/GetUserCashOut' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Note For list endpoint use this curl. curl --location --request GET 'https://api.waffarx.com/api/v1/CashBack/GetCashOutList' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Parameters Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < Cashback object> Cashback details Cashout object Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received. userToken String User token of the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip currency String Cashback currency. userConvertedValue Decimal User available cash to receive. orderValue Decimal Purchase order value. Example Note For list endpoint you receive list of this object. { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-12T17:42:05.924Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ] } ] }"
  },
  "articles/File_Sharing/Cashout_sftp.html": {
    "href": "articles/File_Sharing/Cashout_sftp.html",
    "title": "Sharing Cashout Data Using SFTP | WaffarX Docs",
    "keywords": "Sharing Cashout Data Using SFTP <!-- > [!NOTE] > ### What is SFTP? > SFTP stands for Secure File Transfer Protocol. Secure File Transfer Protocol is a secure way to transfer the file via the internet. > While we have an FTP protocol to transfer the documents from one host to the next on the network, FTP safety was not a significant > Problem. > To connect to a host to which a file is to be sent, the FTP protocol requires the password, but the password is in plain text, and a > Threat to an attacker interception exists. > The intruder can use the password to misuse it. SFTP launched a secure channel for network transmission of the documents. SFTP is a > Component of an SSH protocol (Secure Shell) that is actually a Unix program. > The SSH protocol creates a secure client-server connection, then SFTP works in the FTP-like manner, transferring the file to the > Secured SSH channel. > SSH is a safe remote access protocol over unsustainable networks to a device. > For telnet, RSH, login, SSH is a substitute. > SFTP checks the identity of the customer and exchanges data once a secured link is formed. --> WaffarX Will Use SFTP for cashout data sharing, this data will include user token along with it's amount of cashout to be sent into his account. As WaffarX will obtain its SFTP credentials from the client, it will send the data based upon agreed time intervals, for example to be daily, weekly or monthly."
  },
  "articles/Overview/Platform_Overview.html": {
    "href": "articles/Overview/Platform_Overview.html",
    "title": "Platform Overview | WaffarX Docs",
    "keywords": "Platform Overview <!-- > [!IMPORTANT] > Before you dive, contact the WaffarX support team at developers@waffarx.com to get acquainted with the WaffarX API basics. --> API Keys appKey A unique identifier for your application. appSecret A private token linked to all the users of your application. Store this safely and never share it in client-side code. It is only available for viewing and saving once (when the application is created). Save it the first time around because thereâ€™s no second chance to access the token! <!-- ## API Environments ### Sandbox Build and test your application using test credentials in our sandbox environment. Here you can run all available API requests and test our functionality with a simulated data. ### Production Go live with real financial institutions and user accounts. Please contact us to request access. -->"
  },
  "articles/Overview/why_WaffarX.html": {
    "href": "articles/Overview/why_WaffarX.html",
    "title": "Getting Started with WaffarX API | WaffarX Docs",
    "keywords": "Getting Started with WaffarX API Company Overview WaffarX allows you to enhance your user experience with cashback rewards. Working with WaffarX enables you to: Reduce the cost and time associated with integrating stores and cashout methods into your product. Focus on providing a seamless user experience with cashback rewards. Mission Statement We at WaffarX aim to cultivate an empowering shopping experience that would not be possible without cashback rewards. Our API provides the infrastructure necessary to build cashback solutions while we ensure that our integration is reliable, compliant, and secure to help applications and financial institutions interact smoothly and efficiently. Security is our utmost priority and we make sure that the privacy of any credentials passing through our system is never compromised. We have implemented our system using the highest level of industry-grade encryption, which protects credentials and sensitive information even if our data vault is breached."
  },
  "articles/Stores/advertiser_details.html": {
    "href": "articles/Stores/advertiser_details.html",
    "title": "Advertiser Details EndPoint | WaffarX Docs",
    "keywords": "Advertiser Details EndPoint For stores details retrieval, you can call api endpoint URL /api/v1/Store/Advertiser[?ID] , using api keys obtained from the auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/store/Advertiser?ID=3480' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Parameters Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < Stores Data> Stores List Store Object Parameter Type Description id Int Store unique id advertisername String English store name advertisernameAr String Arabic Store Name advertisernameNormalized String Readable Store Name waffarXLogo String Store logo URL currency String Store Currency description String Store Discription descriptionAr String Store Arabic Description coverImageURL String Store cover image url cashbackTerms String Store Cash back terms cashbackTermsAr String Arabic store cash back terms shoppingSecrets String Shopping advice for this store shoppingSecretsAr String Arabic Shopping advice for this store termsEn String Store terms termsAr String Arabic terms for this store upToText String Up to cash back text upToTextAr String Arabic up to cash back text exitClickUrl String URL of store exit click cashBackOptions < Store cash back options object > Cash back details for each category in the store coupons < List about this store categories > Store offered coupons advertiserShippingCountries < List of Countries Object > Countries this store ships to advertiserCategories < List of categories Object > Categories of products available from this store Store cashback options (Category cashback details object). Parameter Type Description id Int A unique id for this category cash back data object advertiserID Int Store unique id description String Description descriptionAr String Arabic description for this category percentage Int Cash back percentage for this category exitClickUrl String Exit click for this category Coupon object Parameter Type Description id Int Coupon unique id advertiserID Int Store unique id advertisername String Store Name couponcode String Code of coupon startDate DateTime Start date of coupon endDate DateTime End Date of coupn coupon String Coupon description upToText String Description of coupon up to percentage upToTextAr String Arabic description of coupon up to percentage noteAr String Coupon note noteEn String English Coupon note exitClickUrl String URL of exit click description String Details about this coupon descriptionAr String Arabic details about this coupon destination String Coupon destinaton Shipping countries object Parameter Type Description countryId Int Country unique id countryName Int Store unique id flagLink String Url of country flag Store categories object Parameter Type Description id Int category unique id categoryName String category name categoryNameAr String Arabic category name"
  },
  "articles/Stores/All_Advertisers.html": {
    "href": "articles/Stores/All_Advertisers.html",
    "title": "All Advertisers EndPoint | WaffarX Docs",
    "keywords": "All Advertisers EndPoint For stores data retrieval, you can call api endpoint URL /api/v1/Store/AllAdvertisers[?take&skip] , using api keys obtained from the auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/store/AllAdvertisers?take=50&skip=0' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Parameters Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < Stores List> Stores List Store Object Parameter Type Description id Int Unique identifier for the store storeName String Name of store storeNameAr String English Name of Store logo String URL of store logo upToText String Cashback up to Text upToTextAr String Arabic Cashback up to Text advertiserCategories < store Category object > List with this online store category meta < Response pagination meta data > Data about current page/pagination info Category object Parameter Type Description id Int Unique identifier for the category categoryName String Name of this store category categoryNameAr String Arabic name of this store catgeory Response pagination meta object Parameter Type Description total Int Total Results cout Int Total Count on this page take Int Stores Taken skip Int Stores skipped Example { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"stores\": [ { \"id\": 0, \"stroeName\": \"string\", \"stroeNameAr\": \"string\", \"logo\": \"string\", \"upToText\": \"string\", \"upToTextAr\": \"string\", \"advertiserCategories\": [ { \"id\": 0, \"categoryName\": \"string\", \"categoryNameAr\": \"string\" } ] } ], \"meta\": { \"total\": 0, \"count\": 0, \"take\": 0, \"skip\": 0 } } } ]"
  },
  "articles/User/login.html": {
    "href": "articles/User/login.html",
    "title": "Login User EndPoint | WaffarX Docs",
    "keywords": "Login User EndPoint To login a user data you can call api endpoint URL /api/v1/user/Login , using api keys obtained from auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/user/Login' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Paramertrs Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Reponse Note Your responses may differ from those listed below on a case-by-case basis. Reponse Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < User object > loggin in user object User object Parameter Type Description userToken String User Token for the client app loginUrl String Magic link to login the user in WaffarX expireDate DateTime User Expired isUsed Boolean Is user in use flag cdate DateTime User creation date Example { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"userToken\": \"string\", \"loginUrl\": \"string\", \"expireDate\": \"2021-09-13T13:01:22.563Z\", \"isUsed\": true, \"cdate\": \"2021-09-13T13:01:22.563Z\" }"
  },
  "articles/User/Register.html": {
    "href": "articles/User/Register.html",
    "title": "Register User EndPoint | WaffarX Docs",
    "keywords": "Register User EndPoint Note Used for single sign on sso. To register a user with newly created data on WaffarX, you can call api endpoint URL /api/v1/User/Register ,using api keys obtained from the auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/store/AllAdvertisers?take=50&skip=0' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Parameters Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data Int successfully registered user flag Example { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": 0 } ] }"
  },
  "articles/User/signup.html": {
    "href": "articles/User/signup.html",
    "title": "Signup User EndPoint | WaffarX Docs",
    "keywords": "Signup User EndPoint To register user data, you can call api endpoint URL /api/v1/user/SignUp , using api keys obtained from the auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/user/SignUp' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' \\ --header 'Content-Type: application/json' \\ --data-raw '{ \"FirstName\":\"Test FirstName\", \"LastName\":\"Test LastName\", \"Email\":\"testwaffarha@testwaffarha.com\", \"PhoneNumber\":\"01228733892\" }' Parameters Details Headers Header Value Authentication Bearer Token Request Object Parameter Type Description firstName String User first name lastName string User last name email string User email phoneNumber string User phone number Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < User register object> User data User register object Parameter Type Description id int User unique id status String User's account status [Active / InActive ] paymentCycleStartDate Datetime Start date for cashback payment paymentCycleEndDate DateTiem End date for cashback payment paymentCyclePayDate DateTime Date when user receives cashback (cashout process). paymentMethodName String User's payment method. total Decimal Total cash amount of the cashback to be transferred to user firstName String User first name lastName String User last name email String User email phoneNumber String User phone number userToken String User token for client app lifeTimeCashBack Decimal Accumulated value for user's cashback cashBacks < Cashback objects list > List of all cashback user has earned. cashOuts < Cash out object list > List of all cashback user has received as a cash payment. Cashback object Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received . userToken String User token of the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip currency String Cashback currency. userConvertedValue Decimal Cashback available for user to receive. orderValue Decimal Purchased order value. Cashout object Note It is almsot same as cashback object, the only difference is that it as received by the end-user. Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received. userToken String User token for the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip. currency String Cashback currency. userConvertedValue Decimal Cashback available for user to receive. orderValue Decimal Purchased order value. Example { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"firstName\": \"string\", \"lastName\": \"string\", \"email\": \"string\", \"phoneNumber\": \"string\", \"userToken\": \"string\", \"lifeTimeCashBack\": 0, \"loginUrl\": \"string\", \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:59:38.129Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"cashOuts\": [ { \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:59:38.129Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"id\": 0, \"userToken\": \"string\", \"status\": \"string\", \"paymentCycleStartDate\": \"2021-09-13T12:59:38.129Z\", \"paymentCycleEndDate\": \"2021-09-13T12:59:38.129Z\", \"paymentCyclePayDate\": \"2021-09-13T12:59:38.129Z\", \"paymentMethodName\": \"string\", \"total\": 0 } ] } } ] }"
  },
  "articles/User/userdetails.html": {
    "href": "articles/User/userdetails.html",
    "title": "User Details Endpoint | WaffarX Docs",
    "keywords": "User Details Endpoint To get user details data, you can call api endpoint URL /api/v1/User/UserDetails , using api keys obtained from the auth step. curl --location --request GET 'https://api.waffarx.com/api/v1/User/UserDetails' \\ --header 'Authorization: __Bearer Token__' \\ --header 'usertoken: __ User Token __ ' Parameters Details Headers Header Value Authentication Bearer Token UserToken [ User Token ] Request Object Parameter Type Description firstName String User first name lastName string User last name email string User email phoneNumber string User phone number Response Note Your responses may differ from those listed below on a case-by-case basis. Response Object Parameter Type Description Errors String Error Occurred Success Boolean Flag if request processed successfully data < User register object> User data User register object Parameter Type Description id int User unique id status String User's account status [Active / InActive ] paymentCycleStartDate Datetime Start date for cashback payment paymentCycleEndDate DateTiem End date for cashback payment paymentCyclePayDate DateTime Date when user receives cashback (cashout process). paymentMethodName String User's paymenet method. total Decimal Total cash amount of the cashback to be transferred to user firstName String User first name lastName String User last name email String User email phoneNumber String User phone numebr userToken String User token for client app lifeTimeCashBack Decimal Accumulated value for user's cashback cashBacks < Cashback objects list > List of all cashback user has earned. cashOuts < Cash out object list > List of all cashback user has received as a cash payment. Cashback object Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received . userToken String User token of the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip currency String Cashback currency. userConvertedValue Decimal Cashback available for user to receive. orderValue Decimal Purchased order value. Cashout object Note It is almsot same as cashback object, the only difference is that it as received by the end-user. Parameter Type Description tranID int Cashback unique id statusName String Cashback status [Pending / Confirmed / Rejected / Closed ] date DateTime Date on which cashback is received. userToken String User token for the client app. advertiserName String Store name. shoppingTripID Int Exit click unique id for this shopping trip. currency String Cashback currency. userConvertedValue Decimal Cashback available for user to receive. orderValue Decimal Purchased order value. Example { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"firstName\": \"string\", \"lastName\": \"string\", \"email\": \"string\", \"phoneNumber\": \"string\", \"userToken\": \"string\", \"lifeTimeCashBack\": 0, \"loginUrl\": \"string\", \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T13:02:31.316Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"cashOuts\": [ { \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T13:02:31.316Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"id\": 0, \"userToken\": \"string\", \"status\": \"string\", \"paymentCycleStartDate\": \"2021-09-13T13:02:31.316Z\", \"paymentCycleEndDate\": \"2021-09-13T13:02:31.316Z\", \"paymentCyclePayDate\": \"2021-09-13T13:02:31.316Z\", \"paymentMethodName\": \"string\", \"total\": 0 } ] }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Welcome to WaffarX Cashback | WaffarX Docs",
    "keywords": "Welcome to WaffarX Cashback Description WaffarX provides a solution for tracking and allocating cashback on customersâ€™ purchases through exposed APIs. These APIs track data from throughout a userâ€™s shopping experience to the allocation and disbursement of cashback. This documentation guides your dev team on how to use our APIs from authentication to the point of cashback disbursement to the end-user. What do the APIs offer ? User Data Stores Data Cashback Data (Allotment) CashOut Data (Disbursment) Getting Started with the API Get your API keys (appKey and appSecret) Exchange your accessCode for an accessToken. Use our Data API endpoints to access financial information. <!-- ## Environments WaffarX is available in two different environments: > [!WARNING] > | Environment | Purpose | How to Access | | :----: | :----: | :----: | | Sandbox | Build and test your application using test credentials in our sandbox environment. Here you can run all available API requests and test our functionality with simulated data. | Follow the steps outlined in our Get Started guide. Log in with the Sandbox environment. | | Production | Go live with real data and user cashback. | Contact Us to request access. | -->"
  },
  "README.html": {
    "href": "README.html",
    "title": "Welcome to WaffarX Cashback | WaffarX Docs",
    "keywords": "Welcome to WaffarX Cashback Description WaffarX provides a solution for cashback through exposed APIs. Offering data and shopping experience till user gets his cashback. This documention guides your dev team how to use our APIs beginning with Auth till gets cashback to the end user. What APIs Can Offer ? Stores Data Deals Data Shopping Trips Cashback Data Customer Support Data Getting Started with the API Get your API keys (appKey and appSecret) Exchange your accessCode for an accessToken. Use our Data API endpoints to access financial information. Environments WaffarX is available in two different environments: Warning Environment Purpose How to Access Sandbox Build and test your application using test credentials in our sandbox environment. Here you can run all available API requests and test our functionality with a simulated WaffarX store. Follow the steps outlined in our Get Started guide. Logging in with the Sandbox environment. Production Go live with real data and user cashbacks. Contact Us to request access."
  },
  "restapi/WaffarX.html": {
    "href": "restapi/WaffarX.html",
    "title": "WaffarX APIs | WaffarX Docs",
    "keywords": "WaffarX APIs CashBack GetUserCashBack Request GET /api/v1/CashBack/GetUserCashBack Parameters Name Type Value Notes *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-12T17:42:05.924Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ] } ] } GetUserCashOut Request GET /api/v1/CashBack/GetUserCashOut Parameters Name Type Value Notes *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": [ { \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:51:53.318Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"id\": 0, \"userToken\": \"string\", \"status\": \"string\", \"paymentCycleStartDate\": \"2021-09-13T12:51:53.318Z\", \"paymentCycleEndDate\": \"2021-09-13T12:51:53.318Z\", \"paymentCyclePayDate\": \"2021-09-13T12:51:53.318Z\", \"paymentMethodName\": \"string\", \"total\": 0 } ] } ] } GetCashBackList Request GET /api/v1/CashBack/GetCashBackList[?skip&take&Status&IsCashed] Parameters Name Type Value Notes skip integer 0 take integer 50 Status string empty IsCashed boolean False *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"usersCashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:53:19.596Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"meta\": { \"total\": 0, \"count\": 0, \"take\": 0, \"skip\": 0 } } } ] } GetCashOutList Request GET /api/v1/CashBack/GetCashOutList[?skip&take&Status] Parameters Name Type Value Notes skip integer 0 take integer 50 Status string pending *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"usersCashOut\": [ { \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:54:02.018Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"id\": 0, \"userToken\": \"string\", \"status\": \"string\", \"paymentCycleStartDate\": \"2021-09-13T12:54:02.018Z\", \"paymentCycleEndDate\": \"2021-09-13T12:54:02.018Z\", \"paymentCyclePayDate\": \"2021-09-13T12:54:02.018Z\", \"paymentMethodName\": \"string\", \"total\": 0 } ], \"meta\": { \"total\": 0, \"count\": 0, \"take\": 0, \"skip\": 0 } } } ] } Store AllAdvertisers Request GET /api/v1/Store/AllAdvertisers[?take&skip] Parameters Name Type Value Notes take integer 50 skip integer 0 *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"stores\": [ { \"id\": 0, \"stroeName\": \"string\", \"stroeNameAr\": \"string\", \"logo\": \"string\", \"upToText\": \"string\", \"upToTextAr\": \"string\", \"advertiserCategories\": [ { \"id\": 0, \"categoryName\": \"string\", \"categoryNameAr\": \"string\" } ] } ], \"meta\": { \"total\": 0, \"count\": 0, \"take\": 0, \"skip\": 0 } } } ] } Advertiser Request GET /api/v1/Store/Advertiser[?ID] Parameters Name Type Value Notes ID integer *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"id\": 0, \"advertisername\": \"string\", \"advertisernameAr\": \"string\", \"advertisernameNormalized\": \"string\", \"waffarXLogo\": \"string\", \"currency\": \"string\", \"description\": \"string\", \"descriptionAr\": \"string\", \"coverImageURL\": \"string\", \"cashbackTerms\": \"string\", \"cashbackTermsAr\": \"string\", \"shoppingSecrets\": \"string\", \"shoppingSecretsAr\": \"string\", \"cashBackOptions\": [ { \"id\": 0, \"advertiserID\": 0, \"description\": \"string\", \"descriptionAr\": \"string\", \"percentage\": 0, \"exitClickUrl\": \"string\" } ], \"coupons\": [ { \"id\": 0, \"advertiserid\": 0, \"advertisername\": \"string\", \"description\": \"string\", \"descriptionAr\": \"string\", \"destination\": \"string\", \"couponcode\": \"string\", \"startDate\": \"2021-09-13T12:59:01.475Z\", \"endDate\": \"2021-09-13T12:59:01.475Z\", \"coupon\": \"string\", \"upToText\": \"string\", \"upToTextAr\": \"string\", \"noteAr\": \"string\", \"noteEn\": \"string\", \"notes\": [ \"string\" ], \"exitClickUrl\": \"string\" } ], \"termsEn\": \"string\", \"termsAr\": \"string\", \"upToText\": \"string\", \"upToTextAr\": \"string\", \"advertiserShippingCountries\": [ { \"countryId\": 0, \"countryName\": \"string\", \"flagLink\": \"string\" } ], \"exitClickUrl\": \"string\", \"advertiserCategories\": [ { \"id\": 0, \"categoryName\": \"string\", \"categoryNameAr\": \"string\" } ] } } ] } User SignUp Request POST /api/v1/User/SignUp Parameters Name Type Value Notes *Authorization string Bearer access token body object { \"firstName\": \"string\", \"lastName\": \"string\", \"email\": \"string\", \"phoneNumber\": \"string\" } Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"firstName\": \"string\", \"lastName\": \"string\", \"email\": \"string\", \"phoneNumber\": \"string\", \"userToken\": \"string\", \"lifeTimeCashBack\": 0, \"loginUrl\": \"string\", \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:59:38.129Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"cashOuts\": [ { \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T12:59:38.129Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"id\": 0, \"userToken\": \"string\", \"status\": \"string\", \"paymentCycleStartDate\": \"2021-09-13T12:59:38.129Z\", \"paymentCycleEndDate\": \"2021-09-13T12:59:38.129Z\", \"paymentCyclePayDate\": \"2021-09-13T12:59:38.129Z\", \"paymentMethodName\": \"string\", \"total\": 0 } ] } } ] } UserDetails Request GET /api/v1/User/UserDetails Parameters Name Type Value Notes *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": { \"firstName\": \"string\", \"lastName\": \"string\", \"email\": \"string\", \"phoneNumber\": \"string\", \"userToken\": \"string\", \"lifeTimeCashBack\": 0, \"loginUrl\": \"string\", \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T13:02:31.316Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"cashOuts\": [ { \"cashBacks\": [ { \"tranID\": 0, \"statusName\": \"string\", \"date\": \"2021-09-13T13:02:31.316Z\", \"userToken\": \"string\", \"advertiserName\": \"string\", \"shoppingTripID\": 0, \"currency\": \"string\", \"userConvertedValue\": 0, \"orderValue\": 0 } ], \"id\": 0, \"userToken\": \"string\", \"status\": \"string\", \"paymentCycleStartDate\": \"2021-09-13T13:02:31.316Z\", \"paymentCycleEndDate\": \"2021-09-13T13:02:31.316Z\", \"paymentCyclePayDate\": \"2021-09-13T13:02:31.316Z\", \"paymentMethodName\": \"string\", \"total\": 0 } ] } } ] } Register Request GET /api/v1/User/Register Parameters Name Type Value Notes *Authorization string Bearer access token UserToken string User Token Generated From WaffarX on Signup Responses Status Code Description Samples 200 Success Mime type: application/json { \"value\": [ { \"errors\": [ \"string\" ], \"success\": true, \"data\": 0 } ] }"
  },
  "Sequence_Daiagrams/cashback_insertion/cashback_insertion.html": {
    "href": "Sequence_Daiagrams/cashback_insertion/cashback_insertion.html",
    "title": "Cashback Insertion Process From WaffarX. | WaffarX Docs",
    "keywords": "Cashback Insertion Process From WaffarX. As shown above, this diagram describes how cashback is inserted into WaffarX system. As The followin steps: \"Step 1 :\" Transaction Reports Received. At This step WaffarX system has receved the users transaction (Conversions) through affaliate network that deals with. \"Step 1.1:\" Insert/Update cashback. This step WaffarX is refine and manipulates transactions data and inserts cashback in (pedning state). \"Step 1.2:\" Assign User Token With cashback(s). This step WaffarX is assign each user (unique token) to it's redeemed cashback. \"Step 1.3:\" Send User(s) Cashback/Transaction (via API Webhook) This step WaffarX sends users transactions to clinets servers as some sort of webhook notifications. \"Step 1.3.1:\" Send User(s) Cashback/Transaction (via API Webhook) This step is acknlowgment of receiving users transactions. \"Step 1.3.2:\" Send User(s) Cashback/Transaction (via API Webhook) This step is OK(200) response if API client bearer token is valid. \"Step 1.3.3:\" Send User(s) Cashback/Transaction (via API Webhook) This step is UNAUTHORIZED(401) response if API client bearer token is not valid."
  },
  "Sequence_Daiagrams/Fetching_cashback/Fetching_cashback.html": {
    "href": "Sequence_Daiagrams/Fetching_cashback/Fetching_cashback.html",
    "title": "Fetching Cashback Process. | WaffarX Docs",
    "keywords": "Fetching Cashback Process. As shown above, this diagram describes how cahshback is fetched into WaffarX system. As The followin steps: \"Step 1 :\" Authenticate. At This step WaffarX system use its cerditntial per each network to start sending requests to affiliate networks. \"Step 1.1:\" Authorize success response. This step WaffarX system is successflly authorized. \"Step 2:\" Fetching conversions (cashbacks) reports. This step WaffarX system is starts to fetch users cashbacks reports. \"Step 3:\" Save new conversions If not exists before.This step WaffarX system the new conversions. \"Step 4:\" Update existing conversion If a cashback exists before. And for some reason it's value is changed, but not resolved by the user, it can be changed to its new value reported by the network. \"Step 5:\" Neglect updating cashback This step is done if and only if the user has resolved his cashback, but is reported a change from the affiliate network. \"Step 2.1:\" 401 Message This step is UNAUTHORIZED(401) response if API client bearer token is not valid."
  },
  "Sequence_Daiagrams/Fetching_cashbacks_API/Fetching_cashbacks_API.html": {
    "href": "Sequence_Daiagrams/Fetching_cashbacks_API/Fetching_cashbacks_API.html",
    "title": "Cashback Tracking Via API Flow | WaffarX Docs",
    "keywords": "Cashback Tracking Via API Flow As shown above, this diagram illustrates the process of sending Cashback data + User Tokens via API: \"Step 1 :\" Transaction Reports Received. WAFFARX Server receives Cashback reports. \"Step 1.1:\" Insert/Update Cashback. WAFFARX Server reads Cashback data & inserts Cashback status. \"Step 1.2\" Assign User Tokens To Cashbacks. WAFFARX Server matches Cashback data to unique User Tokens. \"Step 2:\" Get Cashback With User Tokens. Client Server receives User Cashback data via API. \"Step 2.1:\" Success Response Success response sent via API if Client Bearer Token is valid. \"Step 3:\" Save New Cashback. Client Server sends notification to it's users on a new cashback. \"Step 4:\" Update User Cashback Balanace. Client Server updated User Cashback with new reported cashback. \"Step 5:\" 401 Message Unauthorized response sent via API if Client Bearer Token is not valid."
  },
  "Sequence_Daiagrams/Fetching_cashbacks_webhook/Fetching_cashbacks_webhook.html": {
    "href": "Sequence_Daiagrams/Fetching_cashbacks_webhook/Fetching_cashbacks_webhook.html",
    "title": "Cashback Tracking Via Webhook Flow | WaffarX Docs",
    "keywords": "Cashback Tracking Via Webhook Flow As shown above, this diagram illustrates the process of sending Cashback data + User Tokens via Webhook: \"Step 1 :\" Transaction Reports Received. WAFFARX Server receives Cashback reports. \"Step 1.1:\" Insert/Update Cashback. WAFFARX Server reads Cashback data & inserts Cashback status. \"Step 1.2\" Assign User Tokens To Cashback Data. WAFFARX Server matches Cashback data to unique User Tokens. \"Step 1.3:\" Send Cashback With User Tokens. Client Server receives User Cashback data via Webhook. \"Step 1.3.1:\" Save New Cashback. Client Server sends notification to it's users on a new cashback. \"Step 1.3.2:\" Update User Cashback Balanace. Client Server updated User Cashback with new reported cashback. \"Step 1.4:\" Success Response Success response sent via Webhook if Client Bearer Token is valid. \"Step 1.5:\" Resend User Cashback Data Unauthorized response sent via Webhook if Client Bearer Token is not valid."
  },
  "Sequence_Daiagrams/Overview.html": {
    "href": "Sequence_Daiagrams/Overview.html",
    "title": "In this section, you will find sequence diagrams detailing the WAFFARX integration processes | WaffarX Docs",
    "keywords": "In this section, you will find sequence diagrams detailing the WAFFARX integration processes Sequence diagrams are shown for the following processes: User Navigation Flow. Cashback Tracking Flow."
  },
  "Sequence_Daiagrams/Shopping_Scenario/shopping_scenario.html": {
    "href": "Sequence_Daiagrams/Shopping_Scenario/shopping_scenario.html",
    "title": "User Navigation Flow | WaffarX Docs",
    "keywords": "User Navigation Flow As shown above, this diagram illustrates the flow of the end-user as they navigate the Cashback Rewards Interface via the Client Application. \"Step 1 :\" User calls the stores page. User opens Client App, selects Cashback Rewards Section, All Stores. \"Step 1.1:\" WaffarX Client Is Get Authenticated. Client is authenticated & granted Authorization Token. \"Step 1.1.1:\" Return Stores List. WAFFARX Server returns All Stores data. \"Step 2:\" User request shopping trip for a store. User browses, requests Store Page, checks Cashback terms & conditions, requests Shopping Trip. \"Step 2.1:\" Send User Token. Client sends User Token for identification. \"Step 2.1.1:\" Generate Store Link WAFFARX Server generates Redirection Link to requested store. \"Step 2.1.2:\" Redirect Link To Requested Store WAFFARX Server returns Redirection Link to requested store. \"Step 2.1.2.1:\" Chosen Merchant Landing Page User is redirected from Client App to requested store Landing Page. \"Step 2.1.3:\" 401 Message (UNAUTHORIZED) Error message sent if the Authentication Token is not valid."
  }
}